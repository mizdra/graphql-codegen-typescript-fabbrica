// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`generateCode > generates code 1`] = `
"import {
  type DefineTypeFactoryInterface,
  defineTypeFactory,
} from '@mizdra/graphql-codegen-typescript-fabbrica/helper';
import type {
  Maybe,
  Book,
  Author,
} from './types';

export * from '@mizdra/graphql-codegen-typescript-fabbrica/helper';

export type OptionalBook = {
  id?: string | undefined;
  title?: string | undefined;
  author?: OptionalAuthor | undefined;
};

/**
 * Define factory for {@link Book} model.
 *
 * @param options
 * @returns factory {@link BookFactoryInterface}
 */
export const defineBookFactory: DefineTypeFactoryInterface<
  OptionalBook,
  {}
> = defineTypeFactory;

export type OptionalAuthor = {
  id?: string | undefined;
  name?: string | undefined;
  books?: Book[] | undefined;
};

/**
 * Define factory for {@link Author} model.
 *
 * @param options
 * @returns factory {@link AuthorFactoryInterface}
 */
export const defineAuthorFactory: DefineTypeFactoryInterface<
  OptionalAuthor,
  {}
> = defineTypeFactory;

export type OptionalNode = OptionalBook | OptionalAuthor;

"
`;

exports[`generateCode > generates code when empty typeInfos is passed 1`] = `
"import {
  type DefineTypeFactoryInterface,
  defineTypeFactory,
} from '@mizdra/graphql-codegen-typescript-fabbrica/helper';
import type {
  Maybe,
,
} from './types';

export * from '@mizdra/graphql-codegen-typescript-fabbrica/helper';

"
`;
